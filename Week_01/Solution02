package com.shannonAJ.common.algorithm.week01;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
 * 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。
 *
 * 给定 nums = [2, 7, 11, 15], target = 9
 *
 * 因为 nums[0] + nums[1] = 2 + 7 = 9
 * 所以返回 [0, 1]
 * 链接：https://leetcode-cn.com/problems/two-sum
 */
public class Solution02 {
    public static void main(String[] args) {
        int[] nums = {2, 7, 11, 15};
        int target = 9;
        int[] res = twoSum(nums, target);
        Arrays.stream(res).forEach(System.out::println);

    }

    public static int[] twoSum(int[] nums, int target) {
        List<Integer> res = new ArrayList();
        for(int i = 0;i < nums.length;i++) {
            for(int j = i+1; j < nums.length; j++) {
                if (nums[i] + nums[j] == target) {
                    res.add(i);
                    res.add(j);
                }
            }
        }

        return res.stream().mapToInt(Integer::valueOf).toArray();
    }

}
